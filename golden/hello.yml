source: |-
  section data:
  hello: 'Hello, World!',0

  section text:
      _start:
          add r2,r0,hello
      write:
          lw r1,r2
          beq r1,r0,end
          out r1, 1
          add r2,r2,4
          jmp write
      end:
          halt
input: |-
  Hello, world!
code: |-
  2220001c {'opcode': 'ADD', 'addr_type': 2, 'args': ['r2', 'r0', 28]}
  71120000 {'opcode': 'LW', 'addr_type': 1, 'args': ['r1', 'r2']}
  f1100018 {'opcode': 'BEQ', 'args': ['r1', 'r0', 24]}
  11100001 {'opcode': 'OUT', 'args': ['r1', '1']}
  22220004 {'opcode': 'ADD', 'addr_type': 2, 'args': ['r2', 'r2', '4']}
  f0000004 {'opcode': 'JMP', 'args': [4]}
  00000010 {'opcode': 'HALT', 'args': []}
output: |
  source LoC: 24 code instr: 7
  ============================================================
  Output is `Hello, World!`
  instr_counter: 68 ticks: 179

log: |
  DEBUG    root:machine.py:332 {TICK: 0, PC: 4, ADDR: 0, OUT: } {[rd: 2, rs1: 0, rs2: 0, imm: 28]  Regs [0 0 0 0 0] } ALU [a:0 b:0 output:0] Opcode.ADD [2 0 28 2] 
  DEBUG    root:machine.py:332 {TICK: 1, PC: 4, ADDR: 0, OUT: } {[rd: 2, rs1: 0, rs2: 0, imm: 28]  Regs [0 0 0 0 0] } ALU [a:0 b:28 output:28] Opcode.ADD [2 0 28 2] 
  DEBUG    root:machine.py:332 {TICK: 2, PC: 4, ADDR: 0, OUT: } {[rd: 2, rs1: 0, rs2: 0, imm: 28]  Regs [0 0 28 0 0] } ALU [a:0 b:28 output:28] Opcode.ADD [2 0 28 2] 
  DEBUG    root:machine.py:332 {TICK: 3, PC: 8, ADDR: 0, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 28]  Regs [0 0 28 0 0] } ALU [a:0 b:28 output:28] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 4, PC: 8, ADDR: 28, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 28]  Regs [0 0 28 0 0] } ALU [a:0 b:28 output:28] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 5, PC: 8, ADDR: 28, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 28]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 6, PC: 12, ADDR: 28, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 7, PC: 12, ADDR: 28, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 8, PC: 12, ADDR: 28, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 9, PC: 16, ADDR: 28, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 10, PC: 16, ADDR: 28, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 11, PC: 20, ADDR: 28, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 28 0 0] } ALU [a:0 b:28 output:28] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 12, PC: 20, ADDR: 28, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 28 0 0] } ALU [a:28 b:4 output:32] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 13, PC: 20, ADDR: 28, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 32 0 0] } ALU [a:28 b:4 output:32] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 14, PC: 24, ADDR: 28, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 32 0 0] } ALU [a:28 b:4 output:32] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 15, PC: 4, ADDR: 28, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 32 0 0] } ALU [a:28 b:4 output:32] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 16, PC: 8, ADDR: 28, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 32 0 0] } ALU [a:28 b:4 output:32] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 17, PC: 8, ADDR: 32, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 72 32 0 0] } ALU [a:28 b:4 output:32] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 18, PC: 8, ADDR: 32, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 19, PC: 12, ADDR: 32, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 20, PC: 12, ADDR: 32, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 21, PC: 12, ADDR: 32, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 22, PC: 16, ADDR: 32, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 23, PC: 16, ADDR: 32, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 24, PC: 20, ADDR: 32, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 32 0 0] } ALU [a:28 b:4 output:32] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 25, PC: 20, ADDR: 32, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 32 0 0] } ALU [a:32 b:4 output:36] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 26, PC: 20, ADDR: 32, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 36 0 0] } ALU [a:32 b:4 output:36] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 27, PC: 24, ADDR: 32, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 36 0 0] } ALU [a:32 b:4 output:36] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 28, PC: 4, ADDR: 32, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 36 0 0] } ALU [a:32 b:4 output:36] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 29, PC: 8, ADDR: 32, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 36 0 0] } ALU [a:32 b:4 output:36] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 30, PC: 8, ADDR: 36, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 101 36 0 0] } ALU [a:32 b:4 output:36] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 31, PC: 8, ADDR: 36, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 32, PC: 12, ADDR: 36, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 33, PC: 12, ADDR: 36, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 34, PC: 12, ADDR: 36, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 35, PC: 16, ADDR: 36, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 36, PC: 16, ADDR: 36, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 37, PC: 20, ADDR: 36, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 36 0 0] } ALU [a:32 b:4 output:36] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 38, PC: 20, ADDR: 36, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 36 0 0] } ALU [a:36 b:4 output:40] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 39, PC: 20, ADDR: 36, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 40, PC: 24, ADDR: 36, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 41, PC: 4, ADDR: 36, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 42, PC: 8, ADDR: 36, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 43, PC: 8, ADDR: 40, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 44, PC: 8, ADDR: 40, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 45, PC: 12, ADDR: 40, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 46, PC: 12, ADDR: 40, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 47, PC: 12, ADDR: 40, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 48, PC: 16, ADDR: 40, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 49, PC: 16, ADDR: 40, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 50, PC: 20, ADDR: 40, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:36 b:4 output:40] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 51, PC: 20, ADDR: 40, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 40 0 0] } ALU [a:40 b:4 output:44] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 52, PC: 20, ADDR: 40, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 44 0 0] } ALU [a:40 b:4 output:44] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 53, PC: 24, ADDR: 40, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 44 0 0] } ALU [a:40 b:4 output:44] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 54, PC: 4, ADDR: 40, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 44 0 0] } ALU [a:40 b:4 output:44] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 55, PC: 8, ADDR: 40, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 44 0 0] } ALU [a:40 b:4 output:44] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 56, PC: 8, ADDR: 44, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 44 0 0] } ALU [a:40 b:4 output:44] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 57, PC: 8, ADDR: 44, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 58, PC: 12, ADDR: 44, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 59, PC: 12, ADDR: 44, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 60, PC: 12, ADDR: 44, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 61, PC: 16, ADDR: 44, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 62, PC: 16, ADDR: 44, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 63, PC: 20, ADDR: 44, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 44 0 0] } ALU [a:40 b:4 output:44] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 64, PC: 20, ADDR: 44, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 44 0 0] } ALU [a:44 b:4 output:48] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 65, PC: 20, ADDR: 44, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 48 0 0] } ALU [a:44 b:4 output:48] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 66, PC: 24, ADDR: 44, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 48 0 0] } ALU [a:44 b:4 output:48] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 67, PC: 4, ADDR: 44, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 48 0 0] } ALU [a:44 b:4 output:48] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 68, PC: 8, ADDR: 44, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 48 0 0] } ALU [a:44 b:4 output:48] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 69, PC: 8, ADDR: 48, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 48 0 0] } ALU [a:44 b:4 output:48] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 70, PC: 8, ADDR: 48, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 71, PC: 12, ADDR: 48, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 72, PC: 12, ADDR: 48, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 73, PC: 12, ADDR: 48, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 74, PC: 16, ADDR: 48, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 75, PC: 16, ADDR: 48, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 76, PC: 20, ADDR: 48, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 48 0 0] } ALU [a:44 b:4 output:48] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 77, PC: 20, ADDR: 48, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 48 0 0] } ALU [a:48 b:4 output:52] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 78, PC: 20, ADDR: 48, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 52 0 0] } ALU [a:48 b:4 output:52] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 79, PC: 24, ADDR: 48, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 52 0 0] } ALU [a:48 b:4 output:52] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 80, PC: 4, ADDR: 48, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 52 0 0] } ALU [a:48 b:4 output:52] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 81, PC: 8, ADDR: 48, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 52 0 0] } ALU [a:48 b:4 output:52] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 82, PC: 8, ADDR: 52, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 44 52 0 0] } ALU [a:48 b:4 output:52] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 83, PC: 8, ADDR: 52, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 84, PC: 12, ADDR: 52, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 85, PC: 12, ADDR: 52, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 86, PC: 12, ADDR: 52, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 87, PC: 16, ADDR: 52, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 88, PC: 16, ADDR: 52, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 89, PC: 20, ADDR: 52, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 52 0 0] } ALU [a:48 b:4 output:52] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 90, PC: 20, ADDR: 52, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 52 0 0] } ALU [a:52 b:4 output:56] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 91, PC: 20, ADDR: 52, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 56 0 0] } ALU [a:52 b:4 output:56] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 92, PC: 24, ADDR: 52, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 56 0 0] } ALU [a:52 b:4 output:56] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 93, PC: 4, ADDR: 52, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 56 0 0] } ALU [a:52 b:4 output:56] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 94, PC: 8, ADDR: 52, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 56 0 0] } ALU [a:52 b:4 output:56] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 95, PC: 8, ADDR: 56, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 32 56 0 0] } ALU [a:52 b:4 output:56] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 96, PC: 8, ADDR: 56, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 97, PC: 12, ADDR: 56, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 98, PC: 12, ADDR: 56, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 99, PC: 12, ADDR: 56, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 100, PC: 16, ADDR: 56, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 101, PC: 16, ADDR: 56, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 102, PC: 20, ADDR: 56, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 56 0 0] } ALU [a:52 b:4 output:56] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 103, PC: 20, ADDR: 56, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 56 0 0] } ALU [a:56 b:4 output:60] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 104, PC: 20, ADDR: 56, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 60 0 0] } ALU [a:56 b:4 output:60] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 105, PC: 24, ADDR: 56, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 60 0 0] } ALU [a:56 b:4 output:60] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 106, PC: 4, ADDR: 56, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 60 0 0] } ALU [a:56 b:4 output:60] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 107, PC: 8, ADDR: 56, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 60 0 0] } ALU [a:56 b:4 output:60] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 108, PC: 8, ADDR: 60, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 87 60 0 0] } ALU [a:56 b:4 output:60] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 109, PC: 8, ADDR: 60, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 110, PC: 12, ADDR: 60, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 111, PC: 12, ADDR: 60, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 112, PC: 12, ADDR: 60, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 113, PC: 16, ADDR: 60, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 114, PC: 16, ADDR: 60, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 115, PC: 20, ADDR: 60, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 60 0 0] } ALU [a:56 b:4 output:60] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 116, PC: 20, ADDR: 60, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 60 0 0] } ALU [a:60 b:4 output:64] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 117, PC: 20, ADDR: 60, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 64 0 0] } ALU [a:60 b:4 output:64] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 118, PC: 24, ADDR: 60, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 64 0 0] } ALU [a:60 b:4 output:64] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 119, PC: 4, ADDR: 60, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 64 0 0] } ALU [a:60 b:4 output:64] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 120, PC: 8, ADDR: 60, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 64 0 0] } ALU [a:60 b:4 output:64] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 121, PC: 8, ADDR: 64, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 111 64 0 0] } ALU [a:60 b:4 output:64] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 122, PC: 8, ADDR: 64, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 123, PC: 12, ADDR: 64, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 124, PC: 12, ADDR: 64, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 125, PC: 12, ADDR: 64, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 126, PC: 16, ADDR: 64, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 127, PC: 16, ADDR: 64, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 128, PC: 20, ADDR: 64, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 64 0 0] } ALU [a:60 b:4 output:64] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 129, PC: 20, ADDR: 64, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 64 0 0] } ALU [a:64 b:4 output:68] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 130, PC: 20, ADDR: 64, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 68 0 0] } ALU [a:64 b:4 output:68] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 131, PC: 24, ADDR: 64, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 68 0 0] } ALU [a:64 b:4 output:68] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 132, PC: 4, ADDR: 64, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 68 0 0] } ALU [a:64 b:4 output:68] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 133, PC: 8, ADDR: 64, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 68 0 0] } ALU [a:64 b:4 output:68] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 134, PC: 8, ADDR: 68, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 114 68 0 0] } ALU [a:64 b:4 output:68] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 135, PC: 8, ADDR: 68, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 136, PC: 12, ADDR: 68, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 137, PC: 12, ADDR: 68, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 138, PC: 12, ADDR: 68, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 139, PC: 16, ADDR: 68, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 140, PC: 16, ADDR: 68, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 141, PC: 20, ADDR: 68, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 68 0 0] } ALU [a:64 b:4 output:68] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 142, PC: 20, ADDR: 68, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 68 0 0] } ALU [a:68 b:4 output:72] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 143, PC: 20, ADDR: 68, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 72 0 0] } ALU [a:68 b:4 output:72] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 144, PC: 24, ADDR: 68, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 72 0 0] } ALU [a:68 b:4 output:72] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 145, PC: 4, ADDR: 68, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 72 0 0] } ALU [a:68 b:4 output:72] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 146, PC: 8, ADDR: 68, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 72 0 0] } ALU [a:68 b:4 output:72] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 147, PC: 8, ADDR: 72, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 108 72 0 0] } ALU [a:68 b:4 output:72] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 148, PC: 8, ADDR: 72, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 149, PC: 12, ADDR: 72, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 150, PC: 12, ADDR: 72, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 151, PC: 12, ADDR: 72, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 152, PC: 16, ADDR: 72, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 153, PC: 16, ADDR: 72, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 154, PC: 20, ADDR: 72, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 72 0 0] } ALU [a:68 b:4 output:72] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 155, PC: 20, ADDR: 72, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 72 0 0] } ALU [a:72 b:4 output:76] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 156, PC: 20, ADDR: 72, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 76 0 0] } ALU [a:72 b:4 output:76] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 157, PC: 24, ADDR: 72, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 76 0 0] } ALU [a:72 b:4 output:76] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 158, PC: 4, ADDR: 72, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 76 0 0] } ALU [a:72 b:4 output:76] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 159, PC: 8, ADDR: 72, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 76 0 0] } ALU [a:72 b:4 output:76] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 160, PC: 8, ADDR: 76, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 100 76 0 0] } ALU [a:72 b:4 output:76] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 161, PC: 8, ADDR: 76, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 162, PC: 12, ADDR: 76, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 163, PC: 12, ADDR: 76, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 164, PC: 12, ADDR: 76, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 165, PC: 16, ADDR: 76, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 166, PC: 16, ADDR: 76, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 1]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.OUT [1 1] 
  DEBUG    root:machine.py:332 {TICK: 167, PC: 20, ADDR: 76, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 76 0 0] } ALU [a:72 b:4 output:76] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 168, PC: 20, ADDR: 76, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 76 0 0] } ALU [a:76 b:4 output:80] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 169, PC: 20, ADDR: 76, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 80 0 0] } ALU [a:76 b:4 output:80] Opcode.ADD [2 2 4 2] 
  DEBUG    root:machine.py:332 {TICK: 170, PC: 24, ADDR: 76, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 80 0 0] } ALU [a:76 b:4 output:80] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 171, PC: 4, ADDR: 76, OUT: } {[rd: 2, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 80 0 0] } ALU [a:76 b:4 output:80] Opcode.JMP [4] 
  DEBUG    root:machine.py:332 {TICK: 172, PC: 8, ADDR: 76, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 80 0 0] } ALU [a:76 b:4 output:80] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 173, PC: 8, ADDR: 80, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 33 80 0 0] } ALU [a:76 b:4 output:80] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 174, PC: 8, ADDR: 80, OUT: } {[rd: 1, rs1: 2, rs2: 0, imm: 4]  Regs [0 0 80 0 0] } ALU [a:76 b:4 output:80] Opcode.LW [1 2 1] 
  DEBUG    root:machine.py:332 {TICK: 175, PC: 12, ADDR: 80, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 0 80 0 0] } ALU [a:76 b:4 output:80] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 176, PC: 12, ADDR: 80, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 0 80 0 0] } ALU [a:76 b:4 output:80] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 177, PC: 24, ADDR: 80, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 0 80 0 0] } ALU [a:76 b:4 output:80] Opcode.BEQ [1 0 24] 
  DEBUG    root:machine.py:332 {TICK: 178, PC: 28, ADDR: 80, OUT: } {[rd: 1, rs1: 1, rs2: 0, imm: 24]  Regs [0 0 80 0 0] } ALU [a:76 b:4 output:80] Opcode.HALT [] 
  